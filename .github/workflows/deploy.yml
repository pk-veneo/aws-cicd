name: CI/CD to AWS Lambda

on:
  push:
    branches: [main, dev]

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_DEFAULT_REGION: ap-south-1
      AWS_REGION: ap-south-1
      DEV_ACCOUNT_ID: ${{ vars.DEV_ACCOUNT_ID }}
      DEV_ROLE: ${{ vars.DEV_ROLE }}
      DEV_BUCKET: ${{ vars.DEV_BUCKET }}
      PROD_ACCOUNT_ID: ${{ vars.PROD_ACCOUNT_ID }}
      PROD_ROLE: ${{ vars.PROD_ROLE }}
      PROD_BUCKET: ${{ vars.PROD_BUCKET }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set environment for branch
        id: env
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "ACCOUNT_ID=${PROD_ACCOUNT_ID}" >> $GITHUB_ENV
            echo "GITHUB_ACTIONS_ROLE=${PROD_ROLE}" >> $GITHUB_ENV
            echo "LAMBDA_BUCKET=${PROD_BUCKET}" >> $GITHUB_ENV
          else
            echo "ACCOUNT_ID=${DEV_ACCOUNT_ID}" >> $GITHUB_ENV
            echo "GITHUB_ACTIONS_ROLE=${DEV_ROLE}" >> $GITHUB_ENV
            echo "LAMBDA_BUCKET=${DEV_BUCKET}" >> $GITHUB_ENV
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          # pytest or your test command
          echo "No tests implemented"

      - name: Zip Lambda function
        run: |
          zip lambda.zip lambda_function.py

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.ACCOUNT_ID }}:role/${{ env.GITHUB_ACTIONS_ROLE }}
          aws-region: ap-south-1

      - name: Upload Lambda package to S3
        run: |
          aws s3 cp lambda.zip s3://${{ env.LAMBDA_BUCKET }}/lambda.zip

      - name: Deploy/Update Lambda via CloudFormation
        run: |
          aws cloudformation deploy \
            --template-file lambda-cfn.yaml \
            --stack-name LambdaStack \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides S3Bucket=${{ env.LAMBDA_BUCKET }} LambdaRoleArn=arn:aws:iam::${{ env.ACCOUNT_ID }}:role/LambdaExecutionRole 