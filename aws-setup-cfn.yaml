AWSTemplateFormatVersion: '2010-09-09'
Description: AWS setup for GitHub Actions to Lambda CI/CD pipeline (S3, OIDC, IAM roles)

Parameters:
  DevAccountId:
    Type: String
    Description: AWS Account ID for Dev
  ProdAccountId:
    Type: String
    Description: AWS Account ID for Prod
  GitHubOrg:
    Type: String
    Description: GitHub organization or user
  GitHubRepo:
    Type: String
    Description: GitHub repository name

Resources:
  # S3 Buckets
  DevArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'lambda-artifacts-dev-${DevAccountId}'
      VersioningConfiguration:
        Status: Enabled
  ProdArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'lambda-artifacts-prod-${ProdAccountId}'
      VersioningConfiguration:
        Status: Enabled

  # OIDC Provider (must be created only once per account, skip if already exists)
  GitHubOIDCProvider:
    Type: AWS::IAM::OIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList:
        - '6938fd4d98bab03faadb97b34396831e3780aea1'  # GitHub OIDC thumbprint

  # Lambda Execution Role (shared by all envs)
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LambdaExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  # GitHub Actions Role for Dev
  GitHubActionsRoleDev:
    Type: AWS::IAM::Role
    Properties:
      RoleName: GitHubActionsRoleDev
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Ref GitHubOIDCProvider
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringLike:
                token.actions.githubusercontent.com:sub: !Sub 'repo:${GitHubOrg}/${GitHubRepo}:*'
      Policies:
        - PolicyName: GitHubActionsDevPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:*
                  - lambda:*
                  - s3:*
                  - iam:PassRole
                Resource: '*'

  # GitHub Actions Role for Prod
  GitHubActionsRoleProd:
    Type: AWS::IAM::Role
    Properties:
      RoleName: GitHubActionsRoleProd
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Ref GitHubOIDCProvider
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringLike:
                token.actions.githubusercontent.com:sub: !Sub 'repo:${GitHubOrg}/${GitHubRepo}:*'
      Policies:
        - PolicyName: GitHubActionsProdPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:*
                  - lambda:*
                  - s3:*
                  - iam:PassRole
                Resource: '*'

Outputs:
  DevArtifactsBucketName:
    Description: S3 bucket for dev Lambda artifacts
    Value: !Ref DevArtifactsBucket
  ProdArtifactsBucketName:
    Description: S3 bucket for prod Lambda artifacts
    Value: !Ref ProdArtifactsBucket
  LambdaExecutionRoleArn:
    Description: ARN of the Lambda execution role
    Value: !GetAtt LambdaExecutionRole.Arn
  GitHubActionsRoleDevArn:
    Description: ARN of the GitHub Actions role for dev
    Value: !GetAtt GitHubActionsRoleDev.Arn
  GitHubActionsRoleProdArn:
    Description: ARN of the GitHub Actions role for prod
    Value: !GetAtt GitHubActionsRoleProd.Arn 